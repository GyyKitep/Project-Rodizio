package br.com.rodizio.controller;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.rodizio.controller.form.CategoriesForm;
import br.com.rodizio.controller.form.EstablishmentForm;
import br.com.rodizio.dto.CategoriesDto;
import br.com.rodizio.dto.EstablishmentDto;
import br.com.rodizio.module.Categories;
import br.com.rodizio.module.Establishment;
import br.com.rodizio.repository.CategoriesRepository;

@RestController
@RequestMapping("categorie")
public class CategoriesController {
	

	@Autowired
	private CategoriesRepository repository;

	@PostMapping
	public ResponseEntity<CategoriesDto> register(@RequestBody CategoriesForm form) {
		Categories categorie = new Categories(form);
		repository.save(categorie);
		return ResponseEntity.ok(new CategoriesDto(categorie));
	}	
	
	@PutMapping("/{id}")
	public ResponseEntity<Object> update(@PathVariable Integer id, @RequestBody CategoriesForm form) {
		Optional<Establishment> categorie = repository.findById(id);
		
		if (establishment.isEmpty()) {
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("NÃ£o foi encontrado este estabelecimento");
		}
		
		establishment.get().atualizarEstablishment(form);
		repository.save(establishment.get());

		return ResponseEntity.ok(new EstablishmentDto(establishment.get()));
	}	

}
